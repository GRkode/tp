openapi: 3.0.0
info:
  title: Film API
  version: 1.0.0
servers:
- url: /
paths:
  /films:
    get:
      operationId: getFilms
      responses:
        "200":
          content:
            application/json:
              example:
              - film_id: 1
                title: Film 1
                description: Description of Film 1
                release_year: 2023
                language_id: 1
                rental_duration: 3
                rental_rate: 4.99
                length: 120
                replacement_cost: 19.99
                rating: G
                last_update: 2023-09-27T12:00:00Z
                special_features:
                - Trailers
                fulltext: Film 1 Description
              schema:
                items:
                  $ref: '#/components/schemas/Film'
                type: array
          description: A list of films
      summary: Get a list of films
      tags:
      - getFilms
    post:
      operationId: addFilm
      requestBody:
        content:
          application/json:
            example:
              title: New Film
              description: Description of New Film
              release_year: 2023
              language_id: 1
              rental_duration: 3
              rental_rate: 4.99
              length: 120
              replacement_cost: 19.99
              rating: G
              special_features:
              - Trailers
            schema:
              $ref: '#/components/schemas/Film'
        required: true
      responses:
        "201":
          description: Film created successfully
        "400":
          description: Bad request
      summary: Create a new film
      tags:
      - createFilm
  /films/{filmID}:
    get:
      parameters:
      - description: ID of the film
        example: 1
        explode: false
        in: path
        name: filmID
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                film_id: 1
                title: Film 1
                description: Description of Film 1
                release_year: 2023
                language_id: 1
                rental_duration: 3
                rental_rate: 4.99
                length: 120
                replacement_cost: 19.99
                rating: G
                last_update: 2023-09-27T12:00:00Z
                special_features:
                - Trailers
                fulltext: Film 1 Description
              schema:
                $ref: '#/components/schemas/Film'
          description: Details of the film
        "404":
          description: Film not found
      summary: Get details of a specific film
      tags:
      - getFilm
components:
  schemas:
    Film:
      example:
        special_features:
        - special_features
        - special_features
        rental_duration: 5
        rental_rate: 5.637376656633329
        release_year: 6
        length: 2
        replacement_cost: 7.061401241503109
        rating: rating
        description: description
        language_id: 1
        title: title
        last_update: 2000-01-23T04:56:07.000+00:00
        fulltext: fulltext
        film_id: 0
      properties:
        film_id:
          type: integer
        title:
          type: string
        description:
          type: string
        release_year:
          type: integer
        language_id:
          type: integer
        rental_duration:
          type: integer
        rental_rate:
          format: double
          type: number
        length:
          type: integer
        replacement_cost:
          format: double
          type: number
        rating:
          type: string
        last_update:
          format: date-time
          type: string
        special_features:
          items:
            type: string
          type: array
        fulltext:
          type: string
      type: object
