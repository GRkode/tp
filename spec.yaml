openapi: 3.0.0
info:
  title: Film API
  version: 1.0.0
paths:
  /films:
    get:
      tags:
        - getFilms
      summary: Get a list of films
      operationId: getFilms
      responses:
        '200':
          description: A list of films
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Film'
              example:
                - film_id: 1
                  title: "Film 1"
                  description: "Description of Film 1"
                  release_year: 2023
                  language_id: 1
                  rental_duration: 3
                  rental_rate: 4.99
                  length: 120
                  replacement_cost: 19.99
                  rating: "G"
                  last_update: "2023-09-27T12:00:00Z"
                  special_features: ["Trailers"]
                  fulltext: "Film 1 Description"
    post:
      tags:
        - createFilm
      summary: Create a new film
      operationId: addFilm
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Film'
            example:
              title: "New Film"
              description: "Description of New Film"
              release_year: 2023
              language_id: 1
              rental_duration: 3
              rental_rate: 4.99
              length: 120
              replacement_cost: 19.99
              rating: "G"
              special_features: ["Trailers"]
      responses:
        '201':
          description: Film created successfully
        '400':
          description: Bad request
  /films/{filmID}:
    get:
      tags:
        - getFilm
      summary: Get details of a specific film
      parameters:
        - name: filmID
          in: path
          description: ID of the film
          required: true
          schema:
            type: integer
          example: 1
      responses:
        '200':
          description: Details of the film
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Film'
              example:
                film_id: 1
                title: "Film 1"
                description: "Description of Film 1"
                release_year: 2023
                language_id: 1
                rental_duration: 3
                rental_rate: 4.99
                length: 120
                replacement_cost: 19.99
                rating: "G"
                last_update: "2023-09-27T12:00:00Z"
                special_features: ["Trailers"]
                fulltext: "Film 1 Description"
        '404':
          description: Film not found
components:
  schemas:
    Film:
      type: object
      properties:
        film_id:
          type: integer
        title:
          type: string
        description:
          type: string
        release_year:
          type: integer
        language_id:
          type: integer
        rental_duration:
          type: integer
        rental_rate:
          type: number
          format: double
        length:
          type: integer
        replacement_cost:
          type: number
          format: double
        rating:
          type: string
        last_update:
          type: string
          format: date-time
        special_features:
          type: array
          items:
            type: string
        fulltext:
          type: string
